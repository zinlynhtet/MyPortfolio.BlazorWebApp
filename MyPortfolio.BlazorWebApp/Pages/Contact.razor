@page "/contact"

<!-- header section -->
<section class="innerbanner" role="banner">
    <header id="header">
        <!-- navigation section  -->
        <div class="header-content clearfix">
            <a class="logo" href="/"><img src="images/logo.png" alt="Mafolio"></a>
            <nav class="navigation" role="navigation">
                <ul class="primary-nav">
                    <li><a href="/aboutMe">About Me</a></li>
                    <li><a href="/contact">Contact</a></li>
                </ul>
            </nav>
            <a href="#" class="nav-toggle">Menu<span></span></a>
        </div>
        <!-- navigation section  -->
    </header>
    <!-- banner text -->
    <div class="container">
        <div class="col-md-10 col-md-offset-1">
            <div class="innerbanner-text text-center">
                <p>Contact</p>
                <!-- banner text -->
            </div>
        </div>
    </div>
</section>
<section id="inner-description" class="section inner-description">
    <div class="container">
        <div class="col-md-10 col-md-offset-1 text-center">
            <p>I am honest, discreet and always focus on your goals.</p>
            <div class="col-md-6 col-md-offset-3 conForm">
                <EditForm Model="@formData" OnValidSubmit="@HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <div id="message"></div>
                    <div class="form-group">
                        <label for="name">Your name:</label>
                        <InputText @bind-Value="formData.Name" name="name" class="form-control" />
                        <ValidationMessage For="@(() => formData.Name)" />
                    </div>
                    <div class="form-group">
                        <label for="email">Email Address:</label>
                        <InputText @bind-Value="formData.Email" name="email" class="form-control" />
                        <ValidationMessage For="@(() => formData.Email)" />
                    </div>
                    <div class="form-group">
                        <label for="comments">Project Details:</label>
                        <InputTextArea @bind-Value="formData.Comments" name="comments" class="form-control" />
                        <ValidationMessage For="@(() => formData.Comments)" />
                    </div>
                    <button type="submit" class="submitBnt">Send</button>
                    <div id="simple-msg"></div>
                </EditForm>
            </div>
        </div>
    </div>
</section>
<footer class="section footer">
    <div class="footer-bottom">
        <div class="container">
            <div class="col-md-12">
                <p>
                    <ul class="footer-share">
                        <li><a href="https://www.facebook.com/fli21k"><i class="fa fa-facebook"></i></a></li>
                        <li><a href="https://www.linkedin.com/in/zin-linnhtet-5537702a3/"><i class="fa fa-linkedin"></i></a></li>
                        <li><a href="mailto:zinlinnhtet.dev@gmail.com"><i class="fa fa-google-plus"></i></a></li>
                    </ul>
                </p>
                <p>
                    © 2024 All rights reserved. All Rights Reserved<br>
                    Made with <i class="fa fa-heart pulse"></i> by ZinLinnhtet.
                </p>
            </div>
        </div>
    </div>
</footer>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script src="js/bootstrap.min.js"></script>
<script src="js/jquery.fancybox.pack.js"></script>
<script src="js/jquery.waypoints.min.js"></script>
<script src="js/retina.min.js"></script>
<script src="js/modernizr.js"></script>
<script src="js/jquery.contact.js"></script>
<script src="js/main.js"></script>
@code {
    private ContactFormData formData = new ContactFormData();
    private async Task HandleValidSubmit()
    {
        try
        {
            var formEndpoint = "https://formspree.io/f/mwkgonay";

            var httpClient = new HttpClient();
            var formContent = new FormUrlEncodedContent(new Dictionary<string, string>
            {
                { "name", formData.Name },
                { "email", formData.Email },
                { "comments", formData.Comments }
            });
            await httpClient.PostAsync(formEndpoint, formContent);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
        formData.Name = "";
        formData.Email = "";
        formData.Comments = "";
    }

    private class ContactFormData
    {
        [Required(ErrorMessage = "Please enter your name.")]
        public string Name { get; set; }

        [Required(ErrorMessage = "Please enter your email address.")]
        [EmailAddress(ErrorMessage = "Please enter a valid email address.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Please enter project details.")]
        public string Comments { get; set; }
    }
}